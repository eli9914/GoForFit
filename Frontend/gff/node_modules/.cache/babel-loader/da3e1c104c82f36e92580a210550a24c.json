{"ast":null,"code":"var _jsxFileName = \"/Users/tomerbenshimol/Documents/GitHub/PM2022_TEAM_23/Frontend/gff/src/components/pages/Messages.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../UserContext';\nimport './Pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages_fromMe: [],\n      messages_toMe: []\n    };\n  }\n\n  async fetchMessages_toMe() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    await axios.get(`http://localhost:8080/messages/getReceiver/${user.userName}`).then(res => {\n      this.setState({\n        messages_toMe: res.data\n      });\n    });\n  }\n\n  async fetchMessages_toAdmin() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    const admin = \"Admin\";\n    await axios.get(`http://localhost:8080/messages/getReceiver/${admin}`).then(res => {\n      this.setState({\n        messages_toMe: this.state.messages_toMe.concat(res.data)\n      });\n    });\n  }\n\n  async fetchMessages_fromMe() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    await axios.get(`http://localhost:8080/messages/getSender/${user.userName}`).then(res => {\n      this.setState({\n        messages_fromMe: res.data\n      });\n    });\n  }\n\n  async deleteMessage() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    const admin = \"Admin\";\n    await axios.delete(`http://localhost:8080/messages/deleteMessage/${user.userName}`).then(this.componentDidMount());\n\n    if (user.type === \"Admin\") {\n      await axios.delete(`http://localhost:8080/messages/deleteMessage/${admin}`).then(this.componentDidMount());\n    }\n  }\n\n  componentDidMount() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    this.fetchMessages_toMe();\n    this.fetchMessages_fromMe();\n\n    if (user.type === \"Admin\") {\n      this.fetchMessages_toAdmin();\n    }\n  }\n\n  render() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newMessage\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"postButton\",\n          to: \"/newMessage\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container1\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), this.state.messages_toMe.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n            children: [\"From: \", message.from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), message.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emptyButton\",\n          onClick: () => this.deleteMessage(),\n          children: \"\\u2009Empty Inbox\\u2009\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container2\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), this.state.messages_fromMe.map(message => !message.to.includes(\"Forum\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n            children: [\"To: \", message.to, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), message.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nMessages.contextType = UserContext;\nexport default Messages;","map":{"version":3,"sources":["/Users/tomerbenshimol/Documents/GitHub/PM2022_TEAM_23/Frontend/gff/src/components/pages/Messages.js"],"names":["axios","React","Link","UserContext","Messages","Component","constructor","props","state","messages_fromMe","messages_toMe","fetchMessages_toMe","user","isAuthenticated","LogIn","LogOut","context","get","userName","then","res","setState","data","fetchMessages_toAdmin","admin","concat","fetchMessages_fromMe","deleteMessage","delete","componentDidMount","type","render","map","message","from","content","to","includes","contextType"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../UserContext';\nimport './Pages.css';\n\nclass Messages extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = \n        {\n            messages_fromMe:[],\n            messages_toMe:[]\n        }\n    }\n\n    async fetchMessages_toMe()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        await axios.get(`http://localhost:8080/messages/getReceiver/${user.userName}`)\n        .then((res) => {this.setState({\n            messages_toMe:res.data\n        })})\n    }\n\n    async fetchMessages_toAdmin()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        const admin = \"Admin\"\n        await axios.get(`http://localhost:8080/messages/getReceiver/${admin}`)\n        .then((res) => {this.setState({\n            messages_toMe:this.state.messages_toMe.concat(res.data)\n        })})\n    }\n\n    async fetchMessages_fromMe()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        await axios.get(`http://localhost:8080/messages/getSender/${user.userName}`)\n        .then((res) => {this.setState({\n            messages_fromMe:res.data\n        })})\n    }\n\n    async deleteMessage()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        const admin = \"Admin\"\n        await axios.delete(`http://localhost:8080/messages/deleteMessage/${user.userName}`).\n        then(this.componentDidMount())\n        if(user.type===\"Admin\")\n        {\n            await axios.delete(`http://localhost:8080/messages/deleteMessage/${admin}`).\n            then(this.componentDidMount())\n        }\n    }\n\n    componentDidMount()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        this.fetchMessages_toMe();\n        this.fetchMessages_fromMe();\n        if(user.type===\"Admin\")\n        {\n            this.fetchMessages_toAdmin();\n        }\n    }\n\n    render() {\n    const {user, isAuthenticated, LogIn, LogOut} = this.context;\n    return (\n        <div className='messages-container' align=\"center\">\n        <div className='newMessage'>\n            <Link className='postButton' to='/newMessage'>Send Message</Link>\n        </div>\n        <div className='messages-container1' align=\"center\">\n                <br/>\n                <h1><u>Inbox</u></h1>\n                <br/>\n                {this.state.messages_toMe.map(message => (\n                <>\n                    <u>From: {message.from}</u>\n                    <br/>\n                    <br/>\n                    {message.content}\n                    <br />\n                    <br/>\n                </>))}\n                <button className='emptyButton' onClick={() => this.deleteMessage()}>&thinsp;Empty Inbox&thinsp;</button>\n                </div>\n                <div className='messages-container2' align=\"center\">\n                <br/>\n                <h1><u>Sent</u></h1>\n                <br/>\n                {this.state.messages_fromMe.map(message => (\n                !message.to.includes(\"Forum\")  && <>\n                    <u>To: {message.to} </u>\n                    <br/>\n                    <br/>\n                    {message.content}\n                    <br/>\n                    <br/>\n                    <br/>\n                </>))}\n                </div>\n    </div>\n        )\n    }\n}\n\nMessages.contextType = UserContext;\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}