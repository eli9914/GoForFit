{"ast":null,"code":"var _jsxFileName = \"/Users/tomerbenshimol/Documents/GitHub/PM2022_TEAM_23/Frontend/gff/src/components/pages/Messages.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../UserContext';\nimport './Pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages_fromMe: [],\n      messages_toMe: []\n    };\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  async fetchMessages_toMe() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    await axios.get(`http://localhost:8080/messages/getReceiver/${user.userName}`).then(res => {\n      this.setState({\n        messages_toMe: res.data\n      });\n    });\n  }\n\n  async fetchMessages_fromMe() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    await axios.get(`http://localhost:8080/messages/getSender/${user.userName}`).then(res => {\n      this.setState({\n        messages_fromMe: res.data\n      });\n    });\n  }\n\n  async deleteMessage() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    await axios.delete(`http://localhost:8080/messages/deleteMessage/${user.userName}`).then(this.componentDidMount());\n  }\n\n  componentDidMount() {\n    this.fetchMessages_toMe();\n    this.fetchMessages_fromMe();\n  }\n\n  render() {\n    const {\n      user,\n      isAuthenticated,\n      LogIn,\n      LogOut\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newMessage\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/newMessage\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container1\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), this.state.messages_toMe.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n            children: [\"From: \", message.from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), message.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.deleteMessage(),\n          children: \"Empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container2\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), this.state.messages_fromMe.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n            children: [\"To: \", message.to, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), message.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nMessages.contextType = UserContext;\nexport default Messages;","map":{"version":3,"sources":["/Users/tomerbenshimol/Documents/GitHub/PM2022_TEAM_23/Frontend/gff/src/components/pages/Messages.js"],"names":["axios","React","ReactPlayer","Link","UserContext","Messages","Component","constructor","props","state","messages_fromMe","messages_toMe","refreshPage","window","location","reload","fetchMessages_toMe","user","isAuthenticated","LogIn","LogOut","context","get","userName","then","res","setState","data","fetchMessages_fromMe","deleteMessage","delete","componentDidMount","render","map","message","from","content","to","contextType"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport ReactPlayer from 'react-player';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../UserContext';\nimport './Pages.css';\n\nclass Messages extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = \n        {\n            messages_fromMe:[],\n            messages_toMe:[]\n        }\n    }\n\n    refreshPage() {\n        window.location.reload(false);\n    }\n\n    async fetchMessages_toMe()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        await axios.get(`http://localhost:8080/messages/getReceiver/${user.userName}`)\n        .then((res) => {this.setState({\n            messages_toMe:res.data\n        })})\n    }\n\n    async fetchMessages_fromMe()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        await axios.get(`http://localhost:8080/messages/getSender/${user.userName}`)\n        .then((res) => {this.setState({\n            messages_fromMe:res.data\n        })})\n    }\n\n    async deleteMessage()\n    {\n        const {user, isAuthenticated, LogIn, LogOut} = this.context;\n        await axios.delete(`http://localhost:8080/messages/deleteMessage/${user.userName}`).\n        then(this.componentDidMount())\n    }\n\n    componentDidMount()\n    {\n        this.fetchMessages_toMe();\n        this.fetchMessages_fromMe();\n    }\n\n    render() {\n    const {user, isAuthenticated, LogIn, LogOut} = this.context;\n    return (\n        <div className='messages-container' align=\"center\">\n        <div className='newMessage'>\n            <Link to='/newMessage'>Send Message</Link>\n        </div>\n        <div className='messages-container1' align=\"center\">\n                <br/>\n                <h1>Inbox</h1>\n                <br/>\n                {this.state.messages_toMe.map(message => (\n                <>\n                    <u>From: {message.from}</u>\n                    <br/>\n                    <br/>\n                    {message.content}\n                    <br />\n                    <br/>\n                </>))}\n                <button onClick={() => this.deleteMessage()}>Empty</button>\n                </div>\n                <div className='messages-container2' align=\"center\">\n                <br/>\n                <h1>Sent</h1>\n                <br/>\n                {this.state.messages_fromMe.map(message => (\n                <>\n                    <u>To: {message.to} </u>\n                    <br/>\n                    <br/>\n                    {message.content}\n                    <br/>\n                    <br/>\n                    <br/>\n                </>))}\n                </div>\n    </div>\n        )\n    }\n}\n\nMessages.contextType = UserContext;\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}